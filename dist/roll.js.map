{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/browserify/node_modules/events/events.js","src/roll.js"],"names":[],"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","file":"roll.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        len = arguments.length;\n        args = new Array(len - 1);\n        for (i = 1; i < len; i++)\n          args[i - 1] = arguments[i];\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    len = arguments.length;\n    args = new Array(len - 1);\n    for (i = 1; i < len; i++)\n      args[i - 1] = arguments[i];\n\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    var m;\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  var ret;\n  if (!emitter._events || !emitter._events[type])\n    ret = 0;\n  else if (isFunction(emitter._events[type]))\n    ret = 1;\n  else\n    ret = emitter._events[type].length;\n  return ret;\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","var EventEmitter = require('events').EventEmitter;\r\n\r\nclass Roll extends EventEmitter {\r\n\r\n  constructor( viewHeight ) {\r\n    super();\r\n\r\n    this.steps = [];\r\n\r\n    this.y = 0;\r\n    this.viewport = viewHeight;\r\n    this.current = 0;\r\n  }\r\n\r\n\r\n  addStep(s) {\r\n    if (Array.isArray( s )) {\r\n      this.steps = this.steps.concat( s );\r\n    } else {\r\n      this.steps.push( s );\r\n    }\r\n    return this;\r\n  }\r\n\r\n\r\n  getCurrent() {\r\n    for (var i=0; i<this.steps.length; i++) {\r\n      var st = this.steps[i];\r\n      if (st.y1 < this.viewport && st.y2 > this.viewport ) {\r\n        this.current = i;\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n\r\n  getCurrentProgress( p ) {\r\n    var len = this.steps.length-1;\r\n    var curr = this.steps[ this.current ];\r\n    var next = (this.current == len) ? {y1: this.steps[len].y2 + this.steps[len].pad} : this.steps[this.current+1];\r\n    return (p-curr.y1) / (next.y1-curr.y1) - this.current;\r\n  }\r\n\r\n\r\n\r\n  getHeight() {\r\n    var h = 0;\r\n    for (var s of this.steps) {\r\n      h += (s.size + s.pad);\r\n    }\r\n    return h;\r\n  }\r\n\r\n\r\n  move( y ) {\r\n    var last = this.y;\r\n    this.y = -y;\r\n    var diff = this.y - last;\r\n\r\n    for (var s of this.steps) {\r\n      s.y1 += diff;\r\n      s.y2 = s.y1 + s.size;\r\n    }\r\n\r\n    this.emit(\"roll\", this.getCurrent(), this.getCurrentProgress(y) );\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  static chunk( size, pad=0) {\r\n    return {\r\n      y1: 0,\r\n      y2: size,\r\n      size: size,\r\n      pad: pad\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nmodule.exports = Roll;\r\nif (window) window.Roll = Roll;"]}